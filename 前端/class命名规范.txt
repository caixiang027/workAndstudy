一、命名规则说明：
1、所有的命名最好都小写
2、属性的值一定要用双引号("")括起来，且一定要有值如class="divcss5",id="divcss5"
3、每个标签都要有开始和结束，且要有正确的层次，排版有规律工整
4、空元素要有结束的tag或于开始的tag后加上"/"
5、表现与结构完全分离，代码中不涉及任何的表现元素，如style、font、bgColor、border等
6、<h1到<h5>的定义，应遵循从大到小的原则，体现文档的结构，并有利于搜索引擎的查询
7、给每一个表格和表单加上一个唯一的、结构标记id
8、给图片加上alt标签
9、尽量使用英文命名原则
10、尽量不缩写，除非一看就明白的单词
11、类名的第一个字符不能使用数字！它无法在 Mozilla 或 Firefox 中起作用

二、相对网页外层重要部分CSS样式命名：
外套 wrap ------------------用于最外层
头部 header ----------------用于头部
主要内容 main ------------用于主体内容（中部）
左侧 main-left -------------左侧布局
右侧 main-right -----------右侧布局
导航条 nav -----------------网页菜单导航条
内容 content ---------------用于网页中部主体
底部 footer -----------------用于底部

CSS命名其它说明:
DIV+CSS命名小结：无论是使用“.”（小写句号）选择符号开头命名，还是使用“#”(井号)选择符号开头命名都无所谓，但我们最好遵循，主要的、重要的、特殊的、最外层的盒子用“#”(井号)选择符号开头命名，其它都用“.”（小写句号）选择符号开头命名，同时考虑命名的CSS选择器在HTML中重复使用调用。
通常我们最常用主要命名有：wrap（外套、最外层）、header（页眉、头部）、nav(导航条)、menu(菜单)、title(栏目标题、一般配合h1\h2\h3\h4标签使用)、content (内容区)、footer(页脚、底部)、logo（标志、可以配合h1标签使用）、banner（广告条，一般在顶部）、copyRight（版权）。其它可根据自己需要选择性使用。

让我们来看下这个类名定义：
　　.right-red { color:red; }
　　你可能很明确的知道这个class选择符的所起的作用。但是这里还有个问题，当你在一星期的时间需要重新设计。在重新设计的时候，这个模块被放置到了左边，而且还是绿色。这个类就不再有存在的价值。所以现在不得不选择，要么改变所有的属性值，要么放着它不动，这可能导致混乱。
　　最好不要在你的类名或者ID名中去加入颜色或者长宽的尺寸等带有属性的名字。你应该避免任何的属性值都是直接的词汇。（如box）直接属性可能会导致内容的分离。
让我们来看看最合理ID/CLASS的命名规范：
　　.product-description { color: red; }
　　用这种样式定义的product-description（产品描述），不管你怎么改变，她都是那么的干净清晰。